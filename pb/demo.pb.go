// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: demo.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: pg:",type:bigserial,pk"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" pg:",type:bigserial,pk"`
	// @gotags: pg:",unique,notnull"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" pg:",unique,notnull"`
	Ip   string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	// @gotags: pg:",array"
	OtherIps []string `protobuf:"bytes,4,rep,name=otherIps,proto3" json:"otherIps,omitempty" pg:",array"`
	// @gotags: pg:",hstore"
	Attributions map[string]string `protobuf:"bytes,5,rep,name=attributions,proto3" json:"attributions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" pg:",hstore"`
	BuyNanoTime  int64             `protobuf:"varint,6,opt,name=buyNanoTime,proto3" json:"buyNanoTime,omitempty"`
	// @gotags: pg:",type:timestamptz"
	BuyTimeStamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=buyTimeStamp,proto3" json:"buyTimeStamp,omitempty" pg:",type:timestamptz"`
	// @gotags: pg:",type:timestamptz,default:now()"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty" pg:",type:timestamptz,default:now()"`
	BoolField  bool                   `protobuf:"varint,9,opt,name=boolField,proto3" json:"boolField,omitempty"`
	// @gotags: pg:"-"
	NotMap2Orm bool `protobuf:"varint,10,opt,name=notMap2Orm,proto3" json:"notMap2Orm,omitempty" pg:"-"`
}

func (x *StorNode) Reset() {
	*x = StorNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorNode) ProtoMessage() {}

func (x *StorNode) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorNode.ProtoReflect.Descriptor instead.
func (*StorNode) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{0}
}

func (x *StorNode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StorNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StorNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StorNode) GetOtherIps() []string {
	if x != nil {
		return x.OtherIps
	}
	return nil
}

func (x *StorNode) GetAttributions() map[string]string {
	if x != nil {
		return x.Attributions
	}
	return nil
}

func (x *StorNode) GetBuyNanoTime() int64 {
	if x != nil {
		return x.BuyNanoTime
	}
	return 0
}

func (x *StorNode) GetBuyTimeStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.BuyTimeStamp
	}
	return nil
}

func (x *StorNode) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *StorNode) GetBoolField() bool {
	if x != nil {
		return x.BoolField
	}
	return false
}

func (x *StorNode) GetNotMap2Orm() bool {
	if x != nil {
		return x.NotMap2Orm
	}
	return false
}

type UpsertStorNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// don't input id and let pg bigserial type to work
	StorNode *StorNode `protobuf:"bytes,1,opt,name=storNode,proto3" json:"storNode,omitempty"`
}

func (x *UpsertStorNodeRequest) Reset() {
	*x = UpsertStorNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStorNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStorNodeRequest) ProtoMessage() {}

func (x *UpsertStorNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStorNodeRequest.ProtoReflect.Descriptor instead.
func (*UpsertStorNodeRequest) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertStorNodeRequest) GetStorNode() *StorNode {
	if x != nil {
		return x.StorNode
	}
	return nil
}

type UpsertStorNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorNode *StorNode `protobuf:"bytes,1,opt,name=storNode,proto3" json:"storNode,omitempty"` // check id generated by pg bigserial type
}

func (x *UpsertStorNodeResponse) Reset() {
	*x = UpsertStorNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertStorNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStorNodeResponse) ProtoMessage() {}

func (x *UpsertStorNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStorNodeResponse.ProtoReflect.Descriptor instead.
func (*UpsertStorNodeResponse) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertStorNodeResponse) GetStorNode() *StorNode {
	if x != nil {
		return x.StorNode
	}
	return nil
}

type HealthzResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Htime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=htime,proto3" json:"htime,omitempty"`
}

func (x *HealthzResponse) Reset() {
	*x = HealthzResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthzResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthzResponse) ProtoMessage() {}

func (x *HealthzResponse) ProtoReflect() protoreflect.Message {
	mi := &file_demo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthzResponse.ProtoReflect.Descriptor instead.
func (*HealthzResponse) Descriptor() ([]byte, []int) {
	return file_demo_proto_rawDescGZIP(), []int{3}
}

func (x *HealthzResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *HealthzResponse) GetHtime() *timestamppb.Timestamp {
	if x != nil {
		return x.Htime
	}
	return nil
}

var File_demo_proto protoreflect.FileDescriptor

var file_demo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x69, 0x72,
	0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x67, 0x77, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x03, 0x0a, 0x08,
	0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x70, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x69, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x67, 0x77, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x75, 0x79, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x4e, 0x61, 0x6e, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x62, 0x75, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f,
	0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f,
	0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x4d, 0x61,
	0x70, 0x32, 0x4f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x6f, 0x74,
	0x4d, 0x61, 0x70, 0x32, 0x4f, 0x72, 0x6d, 0x1a, 0x3f, 0x0a, 0x11, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x15, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x67, 0x77,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x67, 0x77, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a,
	0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x68, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xd5, 0x01, 0x0a, 0x04, 0x44, 0x65, 0x6d,
	0x6f, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x72, 0x65, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x67, 0x77,
	0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x5a, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x69, 0x72, 0x65, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x67, 0x77, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a,
	0x42, 0x1a, 0x5a, 0x18, 0x69, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x74,
	0x67, 0x77, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_demo_proto_rawDescOnce sync.Once
	file_demo_proto_rawDescData = file_demo_proto_rawDesc
)

func file_demo_proto_rawDescGZIP() []byte {
	file_demo_proto_rawDescOnce.Do(func() {
		file_demo_proto_rawDescData = protoimpl.X.CompressGZIP(file_demo_proto_rawDescData)
	})
	return file_demo_proto_rawDescData
}

var file_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_demo_proto_goTypes = []interface{}{
	(*StorNode)(nil),               // 0: ire.restgwdemo.v1.StorNode
	(*UpsertStorNodeRequest)(nil),  // 1: ire.restgwdemo.v1.UpsertStorNodeRequest
	(*UpsertStorNodeResponse)(nil), // 2: ire.restgwdemo.v1.UpsertStorNodeResponse
	(*HealthzResponse)(nil),        // 3: ire.restgwdemo.v1.HealthzResponse
	nil,                            // 4: ire.restgwdemo.v1.StorNode.AttributionsEntry
	(*timestamppb.Timestamp)(nil),  // 5: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_demo_proto_depIdxs = []int32{
	4, // 0: ire.restgwdemo.v1.StorNode.attributions:type_name -> ire.restgwdemo.v1.StorNode.AttributionsEntry
	5, // 1: ire.restgwdemo.v1.StorNode.buyTimeStamp:type_name -> google.protobuf.Timestamp
	5, // 2: ire.restgwdemo.v1.StorNode.updateTime:type_name -> google.protobuf.Timestamp
	0, // 3: ire.restgwdemo.v1.UpsertStorNodeRequest.storNode:type_name -> ire.restgwdemo.v1.StorNode
	0, // 4: ire.restgwdemo.v1.UpsertStorNodeResponse.storNode:type_name -> ire.restgwdemo.v1.StorNode
	5, // 5: ire.restgwdemo.v1.HealthzResponse.htime:type_name -> google.protobuf.Timestamp
	1, // 6: ire.restgwdemo.v1.Demo.UpsertStorNode:input_type -> ire.restgwdemo.v1.UpsertStorNodeRequest
	6, // 7: ire.restgwdemo.v1.Demo.Healthz:input_type -> google.protobuf.Empty
	6, // 8: ire.restgwdemo.v1.Demo.UpsertStorNode:output_type -> google.protobuf.Empty
	3, // 9: ire.restgwdemo.v1.Demo.Healthz:output_type -> ire.restgwdemo.v1.HealthzResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_demo_proto_init() }
func file_demo_proto_init() {
	if File_demo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_demo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStorNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertStorNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthzResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_demo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_demo_proto_goTypes,
		DependencyIndexes: file_demo_proto_depIdxs,
		MessageInfos:      file_demo_proto_msgTypes,
	}.Build()
	File_demo_proto = out.File
	file_demo_proto_rawDesc = nil
	file_demo_proto_goTypes = nil
	file_demo_proto_depIdxs = nil
}
